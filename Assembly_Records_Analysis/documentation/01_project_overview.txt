# 국회 회의록 데이터 분석 프로젝트

## 프로젝트 개요
- 목적: 국회 회의록을 통해 국회의 관심사와 변화 추이 분석
- 데이터: 제415회~제429회 행정안전위원회 회의록
- 분석 기간: 2024년 6월 ~ 2025년 9월

## 분석 목표

### 1. 회차별/안건별 주제 분석
- 각 회의의 주제 및 논의 현황 파악
- 유사 주제의 빈도와 변화 추적

### 2. 자료 요구 분석
- 국회의원들이 각 기관에 요청한 '자료 요구' 항목 추출
- 어떤 자료를 자주 요구하는지, 시기별로 어떻게 변화하는지 분석
- 이를 통해 '새로운 통계 발굴'의 아이디어로 활용

### 3. 정당별 토픽 분석
- 발언자(국회의원) 식별
- 각 의원의 정당 소속별 토픽 경향 비교 분석

## 데이터 구조

### minutes_header_summary.csv
- session: 회차
- session_type: 회의 유형 (임시회, 정기회)
- meeting_no: 회의 번호
- date: 회의 날짜
- section: 위원회 구분
- item_order: 안건 순서
- item_text: 안건 내용

### minutes_speeches.csv
- session: 회차
- session_type: 회의 유형
- meeting_no: 회의 번호
- date: 회의 날짜
- speech_order: 발언 순서
- speaker_name: 발언자 이름
- speaker_position: 발언자 직책
- speaker_area: 발언자 지역구
- data_mem_id: 의원 ID
- agenda_item_orders: 안건 순서
- agenda_item_titles: 안건 제목
- agenda_item_times: 안건 시간
- speech_text: 발언 내용
- party: 정당 (추가됨)

## 데이터 특성 분석

### 의사진행 요소 (전체 발언의 60-70%)
- "의석을 정돈해 주시기 바랍니다"
- "성원이 되었으므로 제XX회 국회..."
- "바쁘신 와중에도 회의에 참석해 주신 위원님 여러분께 감사의 말씀 드립니다"
- "고맙습니다", "감사합니다", "다음은"

### 현안 이슈 (의미있는 내용)
- 제415회: 이태원 참사, 지방소멸, 오송 참사
- 제416회: 진실·화해위원회 불출석, 지방분권
- 제418회: 부천 화재, 딥페이크 성범죄
- 제429회: 오송 지하차도 참사, 국정조사

### 정당별 특성
- 더불어민주당: 민생, 안전, 지방분권, 정치개혁
- 국민의힘: 정부정책, 경제, 안전관리
- 조국혁신당: 정치개혁, 민주주의
- 기본소득당: 민생, 복지, 경제정책

## 현재 데이터로 가능한 분석

### 1. 현안 이슈 생명주기 분석
- 현안별 언급 시점과 지속 기간
- 정당별 현안 대응 차이
- 이슈별 해결 방안 제시

### 2. 정당별 정책 우선순위 분석
- 정당별 정책 관심사 순위
- 정책 우선순위 변화 추이
- 정책 합의점과 갈등점

### 3. 정치적 대립 구조 분석
- 여야 갈등 이슈 식별
- 협력 가능 영역 발견
- 정책 합의점 도출

### 4. 자료 요구 패턴 분석
- 정부기관별 자료 요구 패턴
- 자료 요구 내용의 시기별 변화
- 새로운 통계 발굴 아이디어

## 현재 데이터로 어려운 분석

### 1. 형태소 분석기 활용
- 문제: 의사진행 요소가 너무 많아서 형태소 분석의 의미가 제한적
- 해결: 의사진행 요소 완전 제거 후 분석

### 2. 토픽 모델링 (LDA, BERTopic)
- 문제: 토픽 모델링보다는 현안 추적이 더 효과적
- 해결: 현안 중심 분석으로 방향 전환

## 실용적인 분석 방향

### 1. 현안 중심 분석
- 구체적인 현안 이슈 추적
- 현안별 정당 대응 차이
- 이슈별 해결 방안 제시

### 2. 정책 우선순위 분석
- 정당별 정책 관심사 순위
- 정책 우선순위 변화 추이
- 정책 합의점과 갈등점

### 3. 정치적 대립 구조 분석
- 여야 갈등 이슈 식별
- 협력 가능 영역 발견
- 정책 합의점 도출

## 기술적 접근 방법

### 1. 의사진행 요소 제거
```python
def remove_procedural_elements(speech_text):
    """의사진행 요소 제거"""
    procedural_patterns = [
        r'의석을 정돈해 주시기 바랍니다',
        r'성원이 되었으므로',
        r'바쁘신 와중에도.*감사의 말씀',
        r'오늘 회의는.*위해 열렸습니다',
        r'고맙습니다|감사합니다',
        r'다음은.*말씀해 주십시오',
        r'안녕하십니까\?'
    ]
    
    for pattern in procedural_patterns:
        speech_text = re.sub(pattern, '', speech_text)
    
    return speech_text.strip()
```

### 2. 현안 이슈 추적
```python
def track_current_issues(speeches_df):
    """현안 이슈 추적"""
    current_issues = {
        '이태원참사': ['이태원 참사', '159명', '참사'],
        '부천화재': ['부천', '화재', '사건'],
        '오송참사': ['오송', '지하차도', '14명'],
        '지방소멸': ['지방소멸', '인구감소', '지역균형'],
        '딥페이크': ['딥페이크', '성범죄']
    }
    
    issue_mentions = []
    for _, row in speeches_df.iterrows():
        speech = str(row['speech_text'])
        for issue, keywords in current_issues.items():
            if any(keyword in speech for keyword in keywords):
                issue_mentions.append({
                    'issue': issue,
                    'speaker': row['speaker_name'],
                    'party': row['party'],
                    'speech': speech
                })
    
    return issue_mentions
```

### 3. 정당별 차별화 분석
```python
def analyze_party_differences(speeches_df):
    """정당별 차별화 분석"""
    party_keywords = {}
    for party in speeches_df['party'].unique():
        if party == '미분류':
            continue
        party_speeches = speeches_df[speeches_df['party'] == party]
        # 해당 정당만의 고유 키워드 분석
        party_keywords[party] = extract_unique_keywords(party_speeches)
    
    return party_keywords
```

## 예상 분석 결과물

### 1. 현안 이슈 대시보드
- 현안별 언급 시점과 지속 기간
- 정당별 현안 대응 차이
- 이슈별 해결 방안 제시

### 2. 정책 우선순위 비교
- 정당별 정책 관심사 순위
- 정책 우선순위 변화 추이
- 정책 합의점과 갈등점

### 3. 정치적 대립 구조도
- 여야 갈등 이슈 식별
- 협력 가능 영역 발견
- 정책 합의점 도출

## 결론

현재 데이터로는 형태소 분석이나 토픽 모델링보다는 현안 중심의 정책 분석이 훨씬 효과적입니다. 

의사진행 요소를 걸러내고 현안 이슈 중심으로 분석하면 정책적 의미가 있는 인사이트를 도출할 수 있을 것 같습니다!

## 다음 단계

1. 의사진행 요소 제거 스크립트 개발
2. 현안 이슈 추적 시스템 구축
3. 정당별 정책 우선순위 분석
4. 정치적 대립 구조 분석
5. 시각화 및 대시보드 구축
